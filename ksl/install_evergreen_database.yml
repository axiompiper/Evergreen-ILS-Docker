---
#ansible-playbook /mnt/evergreen/playbooks/restart_app_services.yml --private-key /home/user/.ssh/id_rsa -vvvv -e "hosts=192.168.12.49"

- hosts: '{{hosts}}'
  connection: local
  remote_user: user
  become_method: sudo
  vars_files:
    - 16.04_master_cloud.yml
  tasks:
  - name: starting ssh
    service:
      name: ssh
      state: started
  - name: starting syslog-ng
    service:
      name: syslog-ng
      state: started
  - user: name=user groups=sudo
  - lineinfile: "dest=/etc/sudoers state=present regexp='^%sudo' line='%sudo ALL=(ALL) NOPASSWD: ALL'"
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/passwd state=present regexp='user' line='user:x:1000:1000::/home/user:/bin/bash'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/passwd state=present regexp='opensrf' line='opensrf:x:1002:1002::/home/opensrf:/bin/bash'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/passwd state=present regexp='evergreen' line='evergreen:x:1003:1003::/home/evergreen:/bin/bash'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/passwd state=present regexp='ubuntu' line='ubuntu:x:1004:1004:Ubuntu:/home/ubuntu:/bin/bash'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/passwd state=present regexp='mcoia' line='mcoia:x:1005:1005::/home/mcoia:/bin/bash'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/group state=present regexp='^user' line='user:x:1000:'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/group state=present regexp='^opensrf' line='opensrf:x:1002:'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/group state=present regexp='^evergreen' line='evergreen:x:1003:'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/group state=present regexp='^ubuntu' line='ubuntu:x:1004:'"
    ignore_errors: yes
  - name: Ensure User conformity
    become: true
    lineinfile: "dest=/etc/group state=present regexp='^mcoia' line='mcoia:x:1005:'"
    ignore_errors: yes
  - name: Setting Timezone
    become: true
    ignore_errors: yes
    shell: echo America/Chicago > /etc/timezone
  - name: Chowning home directories
    become: true
    ignore_errors: yes
    shell: chown -R user:user /home/user && chown -R evergreen:evergreen /home/evergreen && chown -R opensrf:opensrf /home/opensrf && chown -R ubuntu:ubuntu /home/ubuntu && chown -R mcoia:mcoia /home/mcoia
  - name: Creating repo folder
    become_user: opensrf
    file: path=/home/opensrf/repos state=directory owner=opensrf group=opensrf mode=0775
  - stat: path=/home/opensrf/repos/OpenSRF
    register: opensrfgit
  - stat: path=/home/opensrf/repos/Evergreen
    register: evergreengit
  - name: Cloning Opensrf git
    when: opensrfgit.stat.isdir is not defined
    become: true
    become_user: opensrf
    environment:
      PATH: "{{ ansible_env.PATH }}:{{openils_path}}/bin"
    shell: cd /home/opensrf/repos && git clone git://git.evergreen-ils.org/OpenSRF.git
  - name: clone Evergreen repo
    when: evergreengit.stat.isdir is not defined
    become: true
    become_user: opensrf
    environment:
      PATH: "{{ ansible_env.PATH }}:{{openils_path}}/bin"
    shell: cd /home/opensrf/repos && git clone git://git.evergreen-ils.org/Evergreen.git
  - name: OpenSRF Checkout Branch
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/OpenSRF && git fetch --all && git pull && git checkout {{opensrf_git_branch}}
  - name: OpenSRF Git Cherry pick loop Debug
    become: true
    become_user: opensrf
    debug: msg="Cherry Picking {{ item }}"
    with_items: "{{ OpenSRF_cherry_picks }}"
  - name: OpenSRF Git Cherry pick loop
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/OpenSRF && git cherry-pick {{ item }}
    with_items: "{{ OpenSRF_cherry_picks }}"
  - name: Install OpenSRF prereqs
    become: true
    shell: apt-get update && cd /home/opensrf/repos/OpenSRF && export PERL_MM_USE_DEFAULT=1 && autoreconf -i && make -f src/extras/Makefile.install ubuntu-xenial && chown opensrf:opensrf -R .
  - name: Add local IP to hosts
    become: true
    shell: echo {{ansible_all_ipv4_addresses.0}} {{ansible_fqdn}} {{ansible_hostname}} >> /etc/hosts
## OPENSRF IS FINISHED

## STARTING EVERGREEN SECTION
  - name: Evergreen Git Add remote
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/Evergreen && git remote add -f working git://git.evergreen-ils.org/working/Evergreen.git
    ignore_errors: yes
  - name: Evergreen Git Add remote
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/Evergreen && git remote set-url --push working git@git.evergreen-ils.org:working/Evergreen.git
    ignore_errors: yes
  - name: Evergreen Git fetch all
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/Evergreen && git reset --hard && git checkout {{evergreen_git_branch}} && git fetch --all && git pull && git config --global user.email "just_need_to_satisfy_git@yoyo.com" && git config --global user.name "checkoutuser"
  - name: Evergreen Git Cherry pick loop Debug
    become: true
    become_user: opensrf
    debug: msg="Cherry Picking {{ item }}"
    with_items: "{{ Evergreen_cherry_picks }}"
  - name: Evergreen Git Cherry pick loop
    become: true
    become_user: opensrf
    shell: cd /home/opensrf/repos/Evergreen && git cherry-pick {{ item }}
    with_items: "{{ Evergreen_cherry_picks }}"
  - name: Setup Evergreen prerequisites 
    become: true
    shell: cd /home/opensrf/repos/Evergreen && make -f Open-ILS/src/extras/Makefile.install ubuntu-xenial
  - name: Setup Evergreen prerequisites 2nd trip through
    become: true
    shell: cd /home/opensrf/repos/Evergreen && make -f Open-ILS/src/extras/Makefile.install ubuntu-xenial
  - name: Setup Evergreen developer packages
    become: true
    shell: cd /home/opensrf/repos/Evergreen && make -f Open-ILS/src/extras/Makefile.install ubuntu-xenial-developer
  - name: Setup Evergreen Postgres packages
    become: true
    shell: cd /home/opensrf/repos/Evergreen && make -f Open-ILS/src/extras/Makefile.install postgres-server-ubuntu-xenial
  - name: Allow postgres to talk outside
    become: true
    lineinfile: "dest=/etc/postgresql/9.5/main/pg_hba.conf state=present regexp='host    all     evergreen' line='host    all     evergreen       {{ansible_default_ipv4.network}}   {{ansible_default_ipv4.netmask}}      md5'"
  - name: Setup postgresql.conf (if you have a custom file in /egconfigs)
    become: true
    ignore_errors: yes
    shell: cp /egconfigs/postgresql.conf /etc/postgresql/9.5/main
  - name: Ensure that plperl is installed
    become: true
    ignore_errors: yes
    shell: apt-get -y install postgresql-plperl-9.5
  - name: Disable transparent_hugepages in grub
    become: true
    ignore_errors: yes
    lineinfile: dest=/etc/default/grub state=present regexp='GRUB_CMDLINE_LINUX_DEFAULT' line='GRUB_CMDLINE_LINUX_DEFAULT="transparent_hugepage=never"'
  - name: Disable transparent_hugepages
    become: true
    ignore_errors: yes
    shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled
  - name: starting postgres
    service:
      name: postgresql
      state: started
  - name: Setup Evergreen database
    become: true
    become_user: postgres
    shell: psql -c "CREATE ROLE {{ database_database }} PASSWORD '{{ database_password }}' SUPERUSER LOGIN INHERIT CREATEDB CREATEROLE"

## Install nfs server
  - file: path=/mnt/evergreen state=directory
  - name: Install nfs
    become: true
    apt: name=nfs-server
  - name: Setup /mnt/evergreen share
    become: true
    lineinfile: "dest=/etc/exports state=present regexp='/mnt/evergreen' line='/mnt/evergreen 10.0.0.0/8(rw,nohide,insecure,no_subtree_check,async)'"
  - name: Restart NFS
    become: true
    shell: /etc/init.d/nfs-kernel-server stop && /etc/init.d/nfs-kernel-server start
...